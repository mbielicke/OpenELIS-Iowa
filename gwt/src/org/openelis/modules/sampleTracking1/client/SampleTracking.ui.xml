
<!-- Exhibit A - UIRF Open-source Based Public Software License. The contents of this file are subject 
  to the UIRF Open-source Based Public Software License(the "License"); you may not use this file except 
  in compliance with the License. You may obtain a copy of the License at openelis.uhl.uiowa.edu Software 
  distributed under the License is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
  express or implied. See the License for the specific language governing rights and limitations under 
  the License. The Original Code is OpenELIS code. The Initial Developer of the Original Code is The University 
  of Iowa. Portions created by The University of Iowa are Copyright 2006-2008. All Rights Reserved. Contributor(s): 
  ______________________________________. Alternatively, the contents of this file marked "Separately-Licensed" 
  may be used under the terms of a UIRF Software license ("UIRF Software License"), in which case the provisions 
  of a UIRF Software License are applicable instead of those above. -->
<ui:UiBinder xmlns:ui='urn:ui:com.google.gwt.uibinder' xmlns:g='urn:import:com.google.gwt.user.client.ui'
  xmlns:w='urn:import:org.openelis.ui.widget' xmlns:r='urn:import:org.openelis.ui.widget.tree'
  xmlns:t='urn:import:org.openelis.ui.widget.table' xmlns:c="urn:import:org.openelis.ui.widget.calendar"
  xmlns:s="urn:import:org.openelis.modules.sample1.client" xmlns:a="urn:import:org.openelis.modules.auxData.client"
>
  <ui:with type="org.openelis.constants.OpenELISConstants" field="msg" />
  <ui:with type="org.openelis.modules.main.client.resources.OpenELISResources" field="res" />
  <g:LayoutPanel styleName="{res.style.WhiteContentPanel}">
    <g:layer top="0px" height="30px">
      <g:AbsolutePanel styleName="{res.buttonPanel.ButtonPanelContainer}" width="100%">
        <g:HorizontalPanel>
          <w:Button css="{res.buttonPanel}" ui:field="expandButton" leftIcon="{res.icon.expandButtonImage}"
            text="{msg.gen_expand}" />
          <w:Button css="{res.buttonPanel}" ui:field="collapseButton" leftIcon="{res.icon.collapseButtonImage}"
            text="{msg.gen_collapse}" />
          <w:Button css="{res.buttonPanel}" ui:field="similarButton" leftIcon="{res.icon.similarButtonImage}"
            text="{msg.gen_similar}" />
          <g:AbsolutePanel styleName="{res.buttonPanel.ButtonDivider}" />
          <w:Button css="{res.buttonPanel}" ui:field="queryButton" leftIcon="{res.icon.QueryButtonImage}"
            text="{msg.gen_query}" toggles="true" />
          <g:AbsolutePanel styleName="{res.buttonPanel.ButtonDivider}" />
          <w:Button css="{res.buttonPanel}" ui:field="updateButton" leftIcon="{res.icon.UpdateButtonImage}"
            text="{msg.gen_update}" toggles="true" />
          <g:AbsolutePanel styleName="{res.buttonPanel.ButtonDivider}" />
          <w:Button css="{res.buttonPanel}" ui:field="addTestButton" leftIcon="{res.icon.addTestButtonImage}"
            text="{msg.gen_addTest}" />
          <w:Button css="{res.buttonPanel}" ui:field="cancelTestButton" leftIcon="{res.icon.cancelTestButtonImage}"
            text="{msg.gen_cancelTest}" />
          <g:AbsolutePanel styleName="{res.buttonPanel.ButtonDivider}" />
          <w:Button css="{res.buttonPanel}" ui:field="commitButton" leftIcon="{res.icon.CommitButtonImage}"
            text="{msg.gen_commit}" />
          <w:Button css="{res.buttonPanel}" ui:field="abortButton" leftIcon="{res.icon.AbortButtonImage}"
            text="{msg.gen_abort}" />
          <g:AbsolutePanel styleName="{res.buttonPanel.ButtonDivider}" />
          <w:Menu ui:field="optionsMenu" selfShow="true">
            <w:display>
              <w:Button ui:field="optionsButton" css="{res.buttonPanel}" text="{msg.gen_options}"
                rightIcon="{res.icon.OptionsButtonImage}" />
            </w:display>
            <w:MenuItem ui:field="unreleaseSample" icon="{res.icon.unreleaseIcon}"
              display="{msg.sampleTracking_unrelease}" />
            <w:MenuItem ui:field="viewFinalReport" icon="{res.icon.unreleaseIcon}"
              display="{msg.finalreport_view}" />
            <w:MenuItem ui:field="changeDomain" icon="{res.icon.unreleaseIcon}" display="{msg.sampleTracking_changeDomain}" />
            <w:Menu icon="historyIcon" display="{msg.gen_history}" ui:field="historyMenu"
              selfShow="true" showBelow="false"
            >
              <w:MenuItem ui:field="historySample" display="{msg.sample_sample}" />
              <w:MenuItem ui:field="historySampleSpecific" display="{msg.sample_specific}" />
              <w:MenuItem ui:field="historySampleProject" display="{msg.sample_project}" />
              <w:MenuItem ui:field="historySampleOrganization" display="{msg.sample_organization}" />
              <w:MenuItem ui:field="historySampleItem" display="{msg.sampleItem_sampleItem}" />
              <w:MenuItem ui:field="historyAnalysis" display="{msg.analysis_analysis}" />
              <w:MenuItem ui:field="historyCurrentResult" display="{msg.result_current}" />
              <w:MenuItem ui:field="historyStorage" display="{msg.storage_storage}" />
              <w:MenuItem ui:field="historySampleQA" display="{msg.sample_qaEvents}" />
              <w:MenuItem ui:field="historyAnalysisQA" display="{msg.analysis_qaEvents}" />
              <w:MenuItem ui:field="historyAuxData" display="{msg.aux_data}" />
            </w:Menu>
          </w:Menu>
        </g:HorizontalPanel>
      </g:AbsolutePanel>
    </g:layer>
    <g:layer top="27px" bottom="0px">
      <g:SplitLayoutPanel>
        <g:west size="305">
          <g:LayoutPanel>
            <g:layer top="0px" bottom="27px">
              <r:Tree ui:field="tree" header="true" styleName="{res.table.ScreenTableWithSides}">
                <r:Column width="280" label="{msg.sample_sample}" />
                <r:Leaf key="sample">
                  <r:LeafColumn>
                    <t:LabelCell />
                  </r:LeafColumn>
                </r:Leaf>
                <r:Leaf key="sampleItem">
                  <r:LeafColumn>
                    <t:LabelCell />
                  </r:LeafColumn>
                </r:Leaf>
                <r:Leaf key="analysis">
                  <r:LeafColumn>
                    <t:LabelCell />
                  </r:LeafColumn>
                </r:Leaf>
                <r:Leaf key="storage">
                  <r:LeafColumn>
                    <t:LabelCell />
                  </r:LeafColumn>
                </r:Leaf>
                <r:Leaf key="note">
                  <r:LeafColumn>
                    <t:LabelCell />
                  </r:LeafColumn>
                </r:Leaf>
                <r:Leaf key="qaEvent">
                  <r:LeafColumn>
                    <t:LabelCell />
                  </r:LeafColumn>
                </r:Leaf>
                <r:Leaf key="auxData">
                  <r:LeafColumn>
                    <t:LabelCell />
                  </r:LeafColumn>
                </r:Leaf>
                <r:Leaf key="result">
                  <r:LeafColumn>
                    <t:LabelCell />
                  </r:LeafColumn>
                </r:Leaf>
                <r:Leaf key="attachment">
                  <r:LeafColumn>
                    <t:LabelCell />
                  </r:LeafColumn>
                </r:Leaf>
              </r:Tree>
            </g:layer>
            <g:layer bottom="0px" height="25px">
              <g:LayoutPanel>
                <g:layer bottom="0px" top="0px" left="0px" right="0px">
                  <g:HorizontalPanel horizontalAlignment="CENTER" width="100%">
                    <g:HorizontalPanel>
                      <w:Button ui:field="prevPageButton" leftIcon="{res.atozButton.PreviousPageButtonImage}"
                        enabled="false" css="{res.atozButton}" />
                      <w:Button ui:field="nextPageButton" leftIcon="{res.atozButton.NextPageButtonImage}"
                        enabled="false" css="{res.atozButton}" />
                    </g:HorizontalPanel>
                  </g:HorizontalPanel>
                </g:layer>
                <g:layer bottom="0px" top="0px" width="24%" right="0px">
                  <g:HorizontalPanel>
                    <w:Button ui:field="popoutTreeButton" leftIcon="{res.icon.popoutIcon}"
                      text="{msg.gen_popout}" />
                  </g:HorizontalPanel>
                </g:layer>
              </g:LayoutPanel>
            </g:layer>
          </g:LayoutPanel>
        </g:west>
        <g:center>
          <g:LayoutPanel>
            <g:layer top="0px" bottom="0px">
              <w:TabLayoutPanel ui:field="tabPanel" barHeight="23" barUnit="PX">
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.sample_sample}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:SampleTabUI ui:field="sampleTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.sample_environmental}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:EnvironmentalTabUI ui:field="environmentalTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.sample_privateWell}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:PrivateWellTabUI ui:field="privateWellTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.sample_sdwis}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:SDWISTabUI ui:field="sdwisTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.sample_neonatal}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:NeonatalTabUI ui:field="neonatalTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.sample_clinical}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:ClinicalTabUI ui:field="clinicalTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.sampleQuickEntry_quickEntry}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:QuickEntryTabUI ui:field="quickEntryTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.sampleItem_sampleItem}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:SampleItemTabUI ui:field="sampleItemTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.analysis_analysis}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:AnalysisTabUI ui:field="analysisTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.test_results}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:ResultTabUI ui:field="resultTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.analysis_notes}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:AnalysisNotesTabUI ui:field="analysisNotesTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.sample_notes}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:SampleNotesTabUI ui:field="sampleNotesTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.storage_storage}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:StorageTabUI ui:field="storageTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.qaEvent_qaEvents}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:QAEventTabUI ui:field="qaEventTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.aux_data}" tabVisible="false" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <a:AuxDataTabUI ui:field="auxDataTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
                <w:tab>
                  <w:customHeader>
                    <w:TabWidget text="{msg.attachment_attachment}" />
                  </w:customHeader>
                  <g:LayoutPanel styleName="{res.tabpanel.TabContainer}">
                    <g:layer>
                      <s:AttachmentTabUI ui:field="attachmentTab" />
                    </g:layer>
                  </g:LayoutPanel>
                </w:tab>
              </w:TabLayoutPanel>
            </g:layer>
          </g:LayoutPanel>
        </g:center>
      </g:SplitLayoutPanel>
    </g:layer>
  </g:LayoutPanel>
</ui:UiBinder>